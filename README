To build gem5, you will need the following software: g++ or clang,
Python (gem5 links in the Python interpreter), SCons, SWIG, zlib, m4. 
see http://www.gem5.org/documentation/general_docs/building

Once you have all dependencies resolved, type 'scons build/RISCV/gem5.fast' (For debugging, use gem5.opt instead).

In order to compile GAP Benchmark Suite, you need to have RISCV Gnu Toolchain (https://github.com/riscv/riscv-gnu-toolchain).
After you installed RISCV Gnu Toolchain you can just "make" the GAP Benchmark Suite in gapbs folder.

Directories you should look at:
   - configs/gap_config: Here is the definition of our system. If you want to change something in the system 
   (cache hierarchy, parameters of cpu etc.) this is the part you should look at. 
   - launch_scripts: This folder contains the script to execute a simulation.
   - gapbs: This is the source code of the benchmark we use. Each application has a dummy "mod" inline assembly to reset the stats before the region of interest.
   Normally you would do this with gem5 pseudo instructions but it is not available for RISCV at the moment. That's why I have implemented another instruction
   that will dump and reset the statistics.
   - results: This folder is created after you run a simulation. You can find the results of the simulation in this folder.
   - final_results: These are the results of the experiments that I conducted. 
   - slurm_scripts: If you use slurm workload manager on your hpc, you can find example slurm scripts in this folder.

To run a simulation with default parameters: 
	python3 launch_scripts/launch.py

Parameters that you can change: 
   --app-name: Name of the application to be simulated (bc, cc, cc_sv, pr, sssp or tc)
   --num-cpus: Number of cpus
   --caches: Indicates that the system has l1 caches. Required to use DerivO3CPU.
   --l1i_size: Size of l1i cache.
   --l1d_size: Size of l1d cache.
   --l2cache: Indicates that the system has l2cache.
   --l2_size: Size of l2 cache.
   --l2_assoc: Associativity of l2 cache.
   --l1i_write_buffers: Number of write buffers for l1i cache.
   --l1d_write_buffers: Number of write buffers for l1d cache.
   --l2_write_buffers: Number of write buffers for l2 cache.
   --l1i_mshrs: Number of Miss Status Handling Registers for l1i cache. 
   --l1d_mshrs: Number of Miss Status Handling Registers for l1d cache
   --l2_mshrs: Number of Miss Status Handling Registers for l2 cache
   --l2_replacement: Replacement policy of l2 cache.
   --mem-size: Memory size
   --graph-name: The graph that we give to the application as an input.
   --dynamic-option-name: The option that is changed in each experiment. (write_buffer, mshr, assoc, prefetcher, replacement)

Example run for different prefetcher types:
	python3 launch_scripts/launch.py --dynamic-option-name=prefetcher 

You can find the summary of what we know so far in SUMMARY.md file.

If you have questions, please send mail to muhammetabdullahsoyturk@gmail.com
