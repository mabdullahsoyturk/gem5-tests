// -*- mode:c++ -*-

def operand_types {{
    'sb' : 'int8_t',
    'ub' : 'uint8_t',
    'sh' : 'int16_t',
    'uh' : 'uint16_t',
    'sw' : 'int32_t',
    'uw' : 'uint32_t',
    'sd' : 'int64_t',
    'ud' : 'uint64_t',
    'sf' : 'float',
    'df' : 'double'
}};

def operands {{
#General Purpose Integer Reg Operands
    'Rd': ('IntReg', 'ud', 'RD', 'IsInteger', 1),
    'Rs1': ('IntReg', 'ud', 'RS1', 'IsInteger', 2),
    'Rs2': ('IntReg', 'ud', 'RS2', 'IsInteger', 3),
    'Rt': ('IntReg', 'ud', 'AMOTempReg', 'IsInteger', 4),
    'Rc1': ('IntReg', 'ud', 'RC1', 'IsInteger', 2),
    'Rc2': ('IntReg', 'ud', 'RC2', 'IsInteger', 3),
    'Rp1': ('IntReg', 'ud', 'RP1 + 8', 'IsInteger', 2),
    'Rp2': ('IntReg', 'ud', 'RP2 + 8', 'IsInteger', 3),
    'ra': ('IntReg', 'ud', 'ReturnAddrReg', 'IsInteger', 1),
    'sp': ('IntReg', 'ud', 'StackPointerReg', 'IsInteger', 2),

    'Fd': ('FloatReg', 'df', 'FD', 'IsFloating', 1),
    'Fd_bits': ('FloatReg', 'ud', 'FD', 'IsFloating', 1),
    'Fs1': ('FloatReg', 'df', 'FS1', 'IsFloating', 2),
    'Fs1_bits': ('FloatReg', 'ud', 'FS1', 'IsFloating', 2),
    'Fs2': ('FloatReg', 'df', 'FS2', 'IsFloating', 3),
    'Fs2_bits': ('FloatReg', 'ud', 'FS2', 'IsFloating', 3),
    'Fs3': ('FloatReg', 'df', 'FS3', 'IsFloating', 4),
    'Fs3_bits': ('FloatReg', 'ud', 'FS3', 'IsFloating', 4),
    'Fc1': ('FloatReg', 'df', 'FC1', 'IsFloating', 1),
    'Fc1_bits': ('FloatReg', 'ud', 'FC1', 'IsFloating', 1),
    'Fc2': ('FloatReg', 'df', 'FC2', 'IsFloatReg', 2),
    'Fc2_bits': ('FloatReg', 'ud', 'FC2', 'IsFloating', 2),
    'Fp2': ('FloatReg', 'df', 'FP2 + 8', 'IsFloating', 2),
    'Fp2_bits': ('FloatReg', 'ud', 'FP2 + 8', 'IsFloating', 2),

#Memory Operand
    'Mem': ('Mem', 'ud', None, ('IsMemRef', 'IsLoad', 'IsStore'), 5),

#Program Counter Operands
    'PC': ('PCState', 'ud', 'pc', (None, None, 'IsControl'), 7),
    'NPC': ('PCState', 'ud', 'npc', (None, None, 'IsControl'), 8),
}};
